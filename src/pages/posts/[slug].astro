---
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import ProfilePic from "../../assets/profile-pic.webp"
import BaseLayout from "../../layouts/BaseLayout.astro";
import type { GetStaticPaths, InferGetStaticParamsType } from "astro";
import DonationCard from "../../components/DonationCard.astro";
import H1 from "../../components/mdx-alt/h1.astro";
import H2 from "../../components/mdx-alt/h2.astro";
import H3 from "../../components/mdx-alt/h3.astro";
import P from "../../components/mdx-alt/p.astro";
import Code from "../../components/mdx-alt/code.astro";
import TableOfContents from "../../components/tableOfContents.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection('posts');
  return posts.map((post) => {
    return {
      params: { slug: post.slug },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params

const post = await getEntry("posts", slug)
const { Content, headings } = await post.render()
---

<BaseLayout tabName={post?.data.title}>
<style is:global>
  div[data-rehype-pretty-code-fragment] {
    @apply overflow-hidden border-2 rounded-lg;
  }

  div[data-rehype-pretty-code-fragment] pre {
    @apply overflow-x-auto px-0 text-sm leading-6 bg-stone-100;
  }

  div[data-rehype-pretty-code-title] {
    @apply bg-stone-200 px-3  py-1 font-semibold -ml-1 font-mono text-xs leading-4 text-stone-700;
  }

  div[data-rehype-pretty-code-fragment] span[data-line] {
    @apply px-3 py-1 border-l-4 border-l-transparent;
  }
  span[data-highlighted-chars] {
    @apply bg-[#e4e7e5] text-zinc-800 p-1 rounded-[5px]
  }

  div[data-rehype-pretty-code-fragment] span[data-highlighted-line] {
    @apply bg-stone-400/10 border-l-[4px] border-yellow-500;
  }

  div[data-rehype-pretty-code-fragment] code {
    @apply grid bg-stone-100 text-stone-800 py-4 px-0;
  }

  code[data-line-numbers] {
    counter-reset: lineNumber;
  }

  code[data-line-numbers] .line::before {
    counter-increment: lineNumber;
    content: counter(lineNumber);
    display: inline-block;
    text-align: right;
    color: rgb(188, 188, 188);
    padding-right: 1rem;
  }
  kbd {
    @apply bg-stone-200 px-1 !text-sm rounded-md border-stone-300 text-stone-700 border-2;
  }

  a {
    @apply underline decoration-1;
  }
  code {
    @apply bg-stone-200 text-sm py-[1px] px-1 text-stone-700 rounded-md;
  }
</style>
  <div class="print:mx-auto print:w-fit place-self-start relative bottom-[10px]">
    <a href="/">
      <Image
        src={ProfilePic}
        width={80}
        height={80}
        quality="100"
        class="rounded-full"
        alt="My profile Picture"
      />
    </a>
  </div>
  <div class="col-end-5">
    <h1 class="mt-5 font-display text-4xl font-black text-stone-800 sm:text-5xl ">
      {post.data.title}
    </h1>
  </div>
  {post.data.renderTableOfContents == true && headings.length !== 0 ? (
    <TableOfContents headings={headings} />
  ) : null}

<Content components={{ h1: H1, h2: H2, h3: H3, p: P, code: Code }} />

<DonationCard />

</BaseLayout>